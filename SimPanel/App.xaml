<Application x:Class="SimPanel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SimPanel"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ctrl="clr-namespace:SimPanel.Controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- material design styles -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignDarkTheme.xaml" />-->

                <!-- primary colors -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary600}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary600Foreground}" />
                </ResourceDictionary>

                <!-- accent color -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent400}" />
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent400Foreground}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="ButtonRect" TargetType="Rectangle">
                <Setter Property="Fill" Value="White"></Setter>
                <Setter Property="Opacity" Value="0.5"></Setter>
                <!--<Setter Property="RadiusX" Value="8"></Setter>
                <Setter Property="RadiusY" Value="4"></Setter>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonRectDark" TargetType="Rectangle">
                <Setter Property="Fill" Value="Black"></Setter>
                <Setter Property="Opacity" Value="0.01"></Setter>
                <!--<Setter Property="RadiusX" Value="8"></Setter>
                <Setter Property="RadiusY" Value="4"></Setter>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonEllipse" TargetType="Ellipse">
                <Setter Property="Fill" Value="White"></Setter>
                <Setter Property="Opacity" Value="0.01"></Setter>
                <!--<Setter Property="RadiusX" Value="8"></Setter>
                <Setter Property="RadiusY" Value="4"></Setter>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ButtonEllipseDark" TargetType="Ellipse">
                <Setter Property="Fill" Value="Black"></Setter>
                <Setter Property="Opacity" Value="0.01"></Setter>
                <!--<Setter Property="RadiusX" Value="8"></Setter>
                <Setter Property="RadiusY" Value="4"></Setter>-->
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--<Style x:Key="RotaryButton" TargetType="{x:Type Control}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="Gray"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid>
                                <Ellipse x:Name="ellipse" Fill="{TemplateBinding Background}" />
                                <Ellipse x:Name="ellipse2" Fill="#40FFFFFF" Visibility="Hidden"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ellipse2" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style x:Key="PushButton" TargetType="{x:Type ctrl:PushButton}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="Gray"></Setter>
                <!--<Setter Property="Selected" Value="True"></Setter>-->
                <Setter Property="Opacity" Value="0.0" />
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ctrl:PushButton}">
                            <Grid>
                                <Rectangle x:Name="rect" Fill="Black" RadiusX="{TemplateBinding RadiusX}" RadiusY="{TemplateBinding RadiusY}" />
                                <!--<Ellipse x:Name="ellipse2" Fill="#40FFFFFF" Visibility="Hidden"/>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter TargetName="ellipse2" Property="Visibility" Value="Visible" />-->
                                    <Setter Property="Opacity" Value="0.2" />
                                </Trigger>
                                <!--<Trigger Property="Selected" Value="True">
                                    <Setter TargetName="ellipse" Property="Fill" Value="Red"></Setter>
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="RotaryButton" TargetType="{x:Type ctrl:Knob}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Background" Value="Gray"></Setter>
                <!--<Setter Property="Selected" Value="True"></Setter>-->
                <Setter Property="Opacity" Value="0.0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ctrl:Knob}">
                            <Grid>
                                <Ellipse x:Name="ellipse" Fill="Gray" />
                                <!--<Ellipse x:Name="ellipse2" Fill="#40FFFFFF" Visibility="Hidden"/>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter TargetName="ellipse2" Property="Visibility" Value="Visible" />-->
                                    <!--<Setter Property="Opacity" Value="0.5" />-->
                                </Trigger>
                                <Trigger Property="Selected" Value="True">
                                    <Setter TargetName="ellipse" Property="Fill" Value="Red"></Setter>
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
